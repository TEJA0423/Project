package com.irct.controller;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

import com.irct.entity.IRCTC;
import com.irct.service.IRCTCService;


public class IRCTCController {
	@Autowired
	private IRCTCService irctcser;
	@PostMapping("/add")
	public ResponseEntity<String> saveIRCTCintoDB(@RequestBody IRCTC irctc){
		String addIRCTC =irctcser.addIRCTC(irctc);
		return new ResponseEntity<>(addIRCTC,HttpStatus.CREATED);
	}
	@GetMapping("/{id}")
	public ResponseEntity<IRCTC> getIRCTC(@PathVariable Integer id){
		IRCTC irctctbyId =irctcser.getIRCTCtById(id);
		return new ResponseEntity<>(irctctbyId,HttpStatus.OK);
	}
	@GetMapping("/all")
	public ResponseEntity<List<IRCTC>> getAllIRCTCById(@RequestParam(name="length", required = false)Long length){
		List<IRCTC>irctclist =irctcser.getAllIRCTCById(length);
		if(length==null) {
			return new ResponseEntity<>(irctclist.stream().limit(1).collect(Collectors.toList()),HttpStatus.OK);	
		}else {
			return new ResponseEntity<>(irctclist.stream().limit(length).collect(Collectors.toList()),HttpStatus.OK);	
		}
	}
	@PutMapping("/update/{id}")
	public ResponseEntity<IRCTC>pdateStudent(@RequestBody IRCTC student, @PathVariable Integer id){
		IRCTC updateIRCTC =irctcser.updateIRCTC(student,id);
		return new ResponseEntity<>(updateIRCTC,HttpStatus.ACCEPTED);
	}
	@PatchMapping("/update/{id}")
	public ResponseEntity<IRCTC> updateIRCTCByfield(@RequestBody Map<String, Object> fields,@PathVariable Integer id){
		IRCTC updateSIRCTCByfield =irctcser.updateIRCTCByfield(fields, id);
		return new ResponseEntity<>(updateSIRCTCByfield,HttpStatus.ACCEPTED);
	}
	@DeleteMapping("delete/{id}")
	public ResponseEntity<Object> deleteIRCTC(@PathVariable Integer id){
		irctcser.deleteIRCTC(id);
		
		return new ResponseEntity<>(HttpStatus.OK);

	}



}
